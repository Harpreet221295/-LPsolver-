# -LPsolver-
#i have solved my part as decided


import numpy as np

objective=[1,3]
constraint1=[10,5,4]
constraint2=[(1,2),(1,0),(0,1)]

class LPsolver():

    def solve(self,a,b,c):
        lenght_b=len(b)
        lenght_a=len(a)
        iarray=np.array(c)
        iarray=np.concatenate((iarray,np.identity(len(b))),1)
        b=np.array(b)
        x=[0]*lenght_a

        iarray=np.insert(iarray,len(a)+lenght_b,b,1)
        B=np.array([0]*lenght_b)
        C=np.array(a+[0]*lenght_b)
        bx=range(lenght_a,lenght_a+lenght_b)
        while(1):
            maxpos=[]
            minpos=[]
            for i in range(lenght_a+lenght_b):
                maxpos.append(C[i]-np.dot(B,iarray[:,i]))


            c=maxpos.index(max(maxpos))

            if maxpos[c]<=0:
                break
            for i in range(lenght_b):
                if iarray[i,c]!=0:
                    minpos.append(iarray[i,-1]/iarray[i,c])
                else:
                    minpos.append(10000000000)
            q=filter(lambda x:x>0,minpos)
            if q==[]:
                return "unbounded function"
                break


